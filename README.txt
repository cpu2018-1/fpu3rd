各演算は200MHz1clk実装

・fdivは使用しない可能性がでてきたかつ、使用するとしても新しくコードを書き直す必要があるので一旦レポジトリから削除した。
・A/B　を fmul(A,finv(B))とみなした場合でもfdivの要件を満たせるように小数の解釈を変更した。

●全体的な仕様
基本的にはIEEE754と似たような数字の扱いをする。
32bit数{s,e,m}(s:1bit e:8bit m:23bit)　を
(-1) ^ s * 1.m * 2 ^ (e-127)
として解釈。
IEEE754ではeが0のときに非正規化数,255のときに非数やinfを表すことになっているが、
それらを表現できる必要はないことになってるので、
e = 0　のとき m = 0 のとき 0
            m!= 0 のとき (-1) ^ s * 1.m * 2 ^ (e-127)
e = 255 のとき 例外(このような数をモジュールの引数として渡すことも出力として吐き出すことも想定しない実装になっている)
としている。

とみなすことにした。(e = 0のときの扱いを少し変更。2^126 <= B < 2^127 のときfinv(B) == 0 となるのを防ぐためである)


●比較的重い処理(あまり時間的な余裕がない)
以下の4演算は時間的にかつかつなので演算の直前直後にレジスタを(32bit×4個)はさむ必要があると思う。

・fadd
subとモジュールを共有する。
fadd instance (ds_val,{dt_val[31] ^ ctrl[1],dt_val[30:0]},fadd_y)
とすることでfaddとfsubを適宜使用してくれるはず。

・finv
A / B を fmul(A,finv(B))
e = 0のときの解釈を変更することで、コーナーケースでも求められている精度は出すことができるようになりました。
お騒がせしました。

・fmul
・fsqrt
特記事項なし


●軽い処理
下記の演算は比較的時間に余裕があるはずなので
ctrlを見てレジスタ(32bit×1個)にまとめるぐらいはできるんじゃないかと思う。
正直配線遅延による部分も大きいので何とも言えないとこもあるが…。

・ftoi
レイトレで使われるfloat,int間の型変換が0丸め(絶対値切り捨て)だと聞いたのでそれで実装。
そういう仕様にすることに関してTAに許可をもらっている。

・feq,flt,fle
浮動小数の扱いを少しだけ変更したため、内容もそれにあわせてやや変更されているので注意。
最初は各々モジュールとして用意することを想定していたが、ほぼ同じ考え方でできて3つのモジュールで変数を共有できるし
コードが短いのでわざわざモジュール化しない方がいい気がしてきた。
レポジトリに一応のこしてある比較の実装では下位31bitが0のときはゼロであることに注意して、
浮動小数を適当にソートして比較する実装になっていて3つとも内容はほぼ同じである。
3つの演算をまとめて

    wire s1,s2;
    wire [30:0] em1,em2;
    assign s1 = ds_val[31];
    assign em1 = ds_val[30:0];
    assign s2 = dt_val[31];
    assign em2 = dt_val[30:0];

    wire s1a,s2a,em1_zero,em2_zero;
    wire [30:0] em1a,em2a;
    assign em1_zero = (em1 == 31'b0);
    assign em2_zero = (em2 == 31'b0);
    assign s1a = (em1_zero) ? 1'b1: ~s1;
    assign em1a = (em1_zero) ? 31'b0: ((s1) ? ~em1: em1);
    assign s2a = (em2_zero) ? 1'b1: ~s2;
    assign em2a = (em2_zero) ? 1'b1: ((s2) ? ~em2: em2);

    wire [31:0] x1a,x2a;
    assign x1a = {s1a,em1a};
    assign x2a = {s2a,em2a};

    // 以下1bit数で定義しているが例えば{31'b0,flt_y}がfltの32bitの出力である。
    wire fle_y,flt_y,feq_y;
    assign flt_y = (x1a < x2a);
    assign feq_y = (x1a == x2a);
    assign fle_y = flt_y | feq_y;

こんな感じで記述できると思う

・fneg
これもわざわざモジュールとして提供する意味は薄い。
    {~ds_val[31],ds_val[30:0]}

・itof
特記事項なし


